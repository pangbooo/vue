~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
配置webpack 大致流程

1.入口文件
2.出口文件， html输出模版
3.管理资源（loader）
    .js (es6-> babel-loader)
    .css (postcss, css modules)  ----> now!!!!
    .vue (vue-loader)
    ...
4.eslint, Stylelint
5.生产环境/开发环境
6.优化
    1)tree shaking 
        .package.json {
            sideEffects : false/ [...]
        }
        UglifyJSPlugin

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Demo

1.针对vue 搭建基础项目
https://itnext.io/vuejs-and-webpack-4-from-scratch-part-1-94c9c28a534a
https://itnext.io/vue-js-and-webpack-4-from-scratch-part-2-5038cc9deffb


2.Working with Webpack 4, ES6, PostCSS with preset-env
https://medium.com/@jontorrado/working-with-webpack-4-es6-postcss-with-preset-env-and-more-93b3d77db7b2
    
    1)Webpack 4
    2)ES6 with Babel
    3)ESLint for JavaScript linting
    4)PostCSS (with import and preset-env)
    5)Stylelint for CSS linting

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
环境变量
https://juejin.im/post/5a4ed5306fb9a01cbc6e2ee2
https://www.webpackjs.com/guides/production/#%E6%8C%87%E5%AE%9A%E7%8E%AF%E5%A2%83

1) process.env.NODE_ENV
   process.env 是NodeJs 环境下的一个包含用户环境的对象
   技术上讲，NODE_ENV 是一个由 Node.js 暴露给执行脚本的系统环境变量。通常用于决定在开发环境与生产环境(dev-vs-prod)下，服务器工具、构建脚本和客户端 library 的行为。

    定义->   1）配置DefinePlugin
            new webpack.DefinePlugin({
                'process.env.NODE_ENV': JSON.stringify('production')
            })

            2)通过设置package.json script 
              {"dev" : "webpack-dev-server NODE_ENV='development' "}

            3）webpack4+ 可以通过mode 来设置 process.env.NODE_ENV
                {"dev" : "webpack-dev-server --config webpack.dev.js "}

process.env.NODE_ENV === 'production' ? '[name].[hash].bundle.js' : '[name].bundle.js' 
这样的条件语句，在 webpack 配置文件中，无法按照预期运行。



2) ？？ ？
env.NODE_ENV 
    npm sctipt -> {build: webpack --env.NODE_ENV=local --env.production --progress}

                console.log('NODE_ENV: ', env.NODE_ENV) // 'local'
                console.log('Production: ', env.production) // true






